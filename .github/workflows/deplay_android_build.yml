name: Mobile App Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  build_android:
    name: Create Android Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.SIGNING_STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.SIGNING_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.SIGNING_KEY_ALIAS }}" >> android/key.properties
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
      - name: Get dependencies
        run: flutter pub get
      - name: Build Android Dev Release APKs
        run: flutter build apk --flavor dev --no-tree-shake-icons --split-per-abi
      - name: Build Android Prod Release APKs
        run: flutter build apk --flavor prod --no-tree-shake-icons --split-per-abi
      - name: Create Android release appbundle
        run: flutter build appbundle --flavor prod --no-tree-shake-icons
      - name: Upload Android APKs
        uses: actions/upload-artifact@v4
        with:
          name: android-apks
          path: build/app/outputs/flutter-apk/
          if-no-files-found: error
          retention-days: 1
      - name: Upload Android App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: build/app/outputs/bundle/prodRelease/app-prod-release.aab
          retention-days: 1
          if-no-files-found: error

  build_ios:
    name: Create iOS Build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
      - name: Get dependencies
        run: flutter pub get
      - name: Setup provisioning profile
        env:
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # Import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # Import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Build iOS Release
        run: |
          flutter build ipa --release --flavor prod --no-tree-shake-icons --export-options-plist=ios/Runner/exportOptions.plist
          ls -R build/ios/ipa  # Debug: List contents of build directory
      - name: Upload iOS Release
        uses: actions/upload-artifact@v4
        with:
          name: ios-release
          path: build/ios/ipa/*.ipa
          if-no-files-found: error

  deploy_android:
    name: Deploy Android Build
    needs: build_android
    runs-on: ubuntu-latest
    steps:
      - name: Download Android Build from artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-release
      - name: Release Build to internal track
        uses: r0adkll/upload-google-play@v1.1.2
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: dev.hemanths.paisa
          releaseFiles: app-prod-release.aab
          track: internal
          status: completed
          inAppUpdatePriority: 5

  deploy_ios:
    name: Deploy iOS Build
    needs: build_ios
    runs-on: macos-latest
    steps:
      - name: Download iOS Build from artifacts
        uses: actions/download-artifact@v4
        with:
          name: ios-release
      - name: List downloaded files
        run: ls -R # Debug: List contents of download directory
      - name: Deploy to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: "*.ipa"
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

  create_github_release:
    name: Create GitHub Release
    needs: [build_android]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download Android APKs
        uses: actions/download-artifact@v4
        with:
          name: android-apks
          path: build/app/outputs/flutter-apk/
      - name: Display structure of downloaded files
        run: ls -R build/app/outputs/flutter-apk/
      - name: Download iOS IPA
        uses: actions/download-artifact@v4
        with:
          name: ios-release
          path: ios-release
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "android-apks/*.apk,ios-release/*.ipa"
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          makeLatest: true
          bodyFile: "body.md"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
